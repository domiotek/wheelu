import { requestorType, RequestStatus, SkillLevel } from "../modules/enums";

export default class CourseService {
	public static readonly skillColorMapping = {
		[SkillLevel.None]: undefined,
		[SkillLevel.Medium]: "warning",
		[SkillLevel.Good]: "info",
		[SkillLevel.Excelent]: "success",
	} as const;

	public static getCourseAlertText(
		id: string,
		role: "student" | "instructor" | "other" = "other",
		params: string[] = []
	) {
		switch (id) {
			case "plannedRide_title":
				return "Zaplanowana jazda";
			case "plannedRide_future_content":
				switch (role) {
					case "student":
						return `Masz zaplanowanÄ… jazdÄ™ - ${params[0]}.`;
					default:
						return `NastÄ™pna zaplanowana jazda - ${params[0]}.`;
				}
			case "plannedRide_start_now_content":
				switch (role) {
					case "student":
						return "Czas na TwojÄ… jazdÄ™. Bezpiecznej i owocnej nauki.";
					case "instructor":
						return "Czas na zaplanowanÄ… jazdÄ™. Rozpocznij jÄ… klikajÄ…c w przycisk obok.";
					default:
						return "Zaplanowana jazda powinna odbyÄ‡ siÄ™ lada chwila.";
				}
			case "plannedRide_past_content":
				switch (role) {
					case "student":
						return `MiaÅ‚eÅ› zaplanowanÄ… jazdÄ™ (${params[0]}), lecz siÄ™ ona nie odbyÅ‚a (a przynajmniej my nic o niej nie wiemy).`;
					case "instructor":
						return `Ostatnia zaplanowana jazda (${params[0]}) nie odbyÅ‚a siÄ™. Anuluj jÄ… przyciskiem obok.`;
					default:
						return `Ostatnia zaplanowana jazda (${params[0]}) nie odbyÅ‚a siÄ™.`;
				}
			case "no_ride_title":
				return "Brak zaplanowej jazdy";
			case "no_ride_content":
				switch (role) {
					case "student":
						return `Wybierz dogodny dla Ciebie termin z tych udostÄ™pnionych przez instruktora.`;
					case "instructor":
						return `Kursant nie zaplanowaÅ‚ jeszcze jazdy. PamiÄ™taj, Å¼e zawsze moÅ¼esz zrobiÄ‡ to za niego.`;
					case "other":
						return `NastÄ™pna jazda w tym kursie nie zostaÅ‚a jeszcze zaplanowana.`;
				}
			case "ongoingRide_title":
				return "TrwajÄ…ca jazda";
			case "ongoingRide_content":
				switch (role) {
					case "student":
						return "Bezpiecznej i owocnej nauki.";
					case "instructor":
						return `PamiÄ™taj o zmianie stanu po zakoÅ„czeniu jazdy ğŸ˜‰ Jazda planowo powinna zakoÅ„czyÄ‡ siÄ™ o ${params[1]}.`;
					case "other":
						return `RozpoczÄ™ta - ${params[0]}. Planowe zakoÅ„czenie - ${params[1]}.`;
				}

			case "ongoingRideExam_content":
				switch (role) {
					case "student":
						return "Powodzenia!";
					case "instructor":
						return `PamiÄ™taj o zmianie stanu egzaminu. MoÅ¼esz to robiÄ‡ w trakcie, lub po jego zakoÅ„czeniu ğŸ˜‰ Egazmin planowo powinien zakoÅ„czyÄ‡ siÄ™ o ${params[1]}.`;
					case "other":
						return `RozpoczÄ™ty - ${params[0]}. Planowe zakoÅ„czenie - ${params[1]}.`;
				}
			case "hoursRanOut_title":
				switch (role) {
					case "student":
						return "SkoÅ„czyÅ‚y Ci siÄ™ godziny ğŸ˜•";
					default:
						return "Brak dostÄ™pnych godzin";
				}
			case "hoursRanOut_content":
				switch (role) {
					case "student":
						return "Nadal moÅ¼esz siÄ™ wiele nauczyÄ‡ - mimo, Å¼e juÅ¼ teraz moÅ¼esz przystÄ…piÄ‡ do oficjalnego egzaminu, byÄ‡ moÅ¼e warto dokupiÄ‡ kilka godzin? Egzamin wewnÄ™trzny jest Å›wietnÄ… okazjÄ… by zaznajomiÄ‡ siÄ™ z formÄ… egzaminu przed przystÄ…pieniem do paÅ„stwowego.";
					default:
						return "Aby kontynuowaÄ‡, kursant musi dokupiÄ‡ godziny.";
				}
			case "examAvailable_title":
				switch (role) {
					case "student":
						return "MoÅ¼esz przystÄ…piÄ‡ do egzaminu wewnÄ™trznego";
					case "instructor":
						return "Kursant moÅ¼e przystÄ…piÄ‡ do egzaminu wewnÄ™trznego";
					case "other":
						return "DostÄ™pny egzamin wewnÄ™trzny";
				}
			case "examAvailable_content":
				switch (role) {
					case "student":
						return "Egzamin wewnÄ™trzny jest idealnÄ… okazjÄ…, by zobaczyÄ‡ jak wyglÄ…da paÅ„stwowy egzamin na prawo jazdy. Potrzebujesz jeszcze trochÄ™ poÄ‡wiczyÄ‡? Nie ma problemu, dalej moÅ¼esz zaplanowaÄ‡ jazdy ğŸ˜‰";
					case "instructor":
						return "Egzamin wewnÄ™trzny moÅ¼e pomÃ³c oswoiÄ‡ siÄ™ z egzaminem paÅ„stwowym.";
					case "other":
						return "Egzamin jest juÅ¼ dostÄ™pny, lecz nie zostaÅ‚ jeszcze zaplanowany.";
				}
			case "complete_hours_left_title":
				switch (role) {
					case "student":
						return "MoÅ¼esz przystÄ…piÄ‡ do egzaminu paÅ„stwowego!";
					case "instructor":
						return "Wszystko gotowe?";
					case "other":
						return "ZaÅ‚oÅ¼enia kursu speÅ‚nione";
				}
			case "complete_hours_left_content":
				switch (role) {
					case "student":
						return "UkoÅ„czyÅ‚eÅ›/aÅ› wszystkie kroki w tym kursie, lecz nadal masz dostÄ™pne godziny - nadal moÅ¼esz poÄ‡wiczyÄ‡ jeÅ›li chcesz. JuÅ¼ po egzaminie? WypeÅ‚nij ankietÄ™.";
					case "instructor":
						return "Wszystkie kroki zostaÅ‚y ukoÅ„czone, lecz w kursie nadal sÄ… dostÄ™pne godziny. MoÅ¼e siÄ™ przydadzÄ…?";
					case "other":
						return "Kursant opanowaÅ‚ umiejÄ™tnoÅ›ci wymagane do kierowania pojazdem oraz zdaÅ‚ egzamin wewnÄ™trzny.";
				}
			case "complete_title":
				switch (role) {
					case "student":
						return "Powodzenia na egzaminie!";
					case "instructor":
						return "Wszystko gotowe";
					case "other":
						return "ZaÅ‚oÅ¼enia kursu speÅ‚nione";
				}
			case "complete_content":
				switch (role) {
					case "student":
						return "UkoÅ„czyÅ‚eÅ›/aÅ› wszystkie kroki w tym kursie i jesteÅ› gotowy/a na egzamin paÅ„stwowy. JuÅ¼ po egzaminie? WypeÅ‚nij ankietÄ™.";
					case "instructor":
						return "Wszystkie kroki zostaÅ‚y ukoÅ„czone. Nie zapomnij poÅ¼yczyÄ‡ powodzenia ğŸ˜‰";
					case "other":
						return "Kursant opanowaÅ‚ umiejÄ™tnoÅ›ci wymagane do kierowania pojazdem oraz zdaÅ‚ egzamin wewnÄ™trzny.";
				}

			case "examSoftBlock_title":
				switch (role) {
					case "student":
						return "Jeszcze nie dostÄ™pny";
					case "other":
					case "instructor":
						return "Jeszcze nie wskazany";
				}
			case "examSoftBlock_content":
				switch (role) {
					case "student":
						return "Przed TobÄ… jeszcze trochÄ™ Ä‡wiczeÅ„, nim bÄ™dziesz gotowa/-y na egzamin.";
					case "instructor":
						return "Egzamin nie jest zalecany, poniewaÅ¼ nie wszystkie umiejÄ™tnoÅ›ci zostaÅ‚y jeszcze opanowane. Mimo to, moÅ¼esz zaplanowaÄ‡ egzamin.";
					case "other":
						return "Kursant nie opanowaÅ‚ jeszcze wszystkich umiejÄ™tnoÅ›ci.";
				}
			case "plannedExam_title":
				return "Egzamin zaplanowany";
			case "plannedExam_content":
				return `Egzamin zostaÅ‚ zaplanowany na ${params[0]}`;

			case "ongoingExam_title":
				return "Egzamin w trakcie";
			case "ongoingExam_content":
				return "WÅ‚aÅ›nie trwa egzamin wewnÄ™trzny.";
			case "plannedExam_alt_title":
				return "Zaplanowany egzamin";
			case "plannedExam_future_content":
				switch (role) {
					case "student":
						return `Masz zaplanowany egzamin - ${params[0]}.`;
					default:
						return `NastÄ™pna zaplanowana jazda (egzamin) - ${params[0]}.`;
				}
			case "plannedExam_start_now_content":
				switch (role) {
					case "student":
						return "Czas na TwÃ³j egzamin. Powodzenia!";
					case "instructor":
						return "Czas na zaplanowany egzamin. Rozpocznij go klikajÄ…c w przycisk obok.";
					default:
						return "Zaplanowany egzamin powinien odbyÄ‡ siÄ™ lada chwila.";
				}
			case "plannedExam_past_content":
				switch (role) {
					case "student":
						return `MiaÅ‚eÅ›/aÅ› zaplanowany egzamin (${params[0]}), lecz siÄ™ on nie odbyÅ‚ (a przynajmniej my nic o tym nie wiemy).`;
					case "instructor":
						return `Ostatni zaplanowany egzamin (${params[0]}) nie odbyÅ‚ siÄ™. Anuluj go przyciskiem obok.`;
					default:
						return `Ostatni zaplanowany egzamin (${params[0]}) nie odbyÅ‚ siÄ™.`;
				}
		}

		return "";
	}

	public static formatRequestStatus(status: RequestStatus) {
		switch (status) {
			case RequestStatus.Canceled:
				return "Anulowany";
			case RequestStatus.Pending:
				return "OczekujÄ…cy";
			case RequestStatus.Rejected:
				return "Odrzucony";
			case RequestStatus.Resolved:
				return "Zrealizowany";
		}
	}

	public static formatRequestorType(type: requestorType) {
		switch (type) {
			case requestorType.Student:
				return "Kursant";
			case requestorType.Instructor:
				return "Instruktor";
		}
	}

	public static formatCourseProgressGroup(
		group: keyof App.Models.ICourseProgress
	) {
		switch (group) {
			case "generalSkills":
				return "OgÃ³lne";
			case "developedAreaSkills":
				return "Ruch w obszarze zabudowanym";
			case "undevelopedAreaSkills":
				return "Ruch w obszarze niezabudowanym";
			case "highwaySkills":
				return "Ruch na drodze ekspresowej";
			case "maneuverSkills":
				return "Manewry";
		}
	}

	public static formatCourseProgressSkill(skill: string) {
		switch (skill) {
			case "preparingVehicle":
				return "Przygotowanie pojazdu do jazdy";
			case "clutchAndShifting":
				return "ObsÅ‚uga sprzÄ™gÅ‚a i zmiana biegÃ³w";
			case "componentKnowledge":
				return "ZnajomoÅ›Ä‡ podzespoÅ‚Ã³w pojazdu";
			case "lightsHandling":
				return "ObsÅ‚uga Å›wiateÅ‚";
			case "harshConditionsDriving":
				return "Jazda w trudnych warunkacj pogodowych";
			case "roundaboutCrossing":
				return "Przejazd przez rondo";
			case "laneChanging":
				return "Zmiana pasa ruchu";
			case "classicIntersection":
				return "Przejazd przez skrzyÅ¼owanie";
			case "givingWayPedestrians":
				return "UstÄ…pienie pierwszeÅ„stwa pieszym";
			case "givingWayVehicles":
				return "UstÄ…pienie pierwszeÅ„stwa pojazdom";
			case "bicycleOvertaking":
				return "Wyprzedzanie rowerzystÃ³w";
			case "overtaking":
			case "vehicleOvertaking":
				return "Wyprzedzanie pojazdÃ³w";
			case "dynamicDriving":
				return "Dynamiczna jazda";
			case "speedAdjusting":
				return "Dostosowanie prÄ™dkoÅ›ci do warunkÃ³w";
			case "perpendicularParking":
				return "Parkowanie prostopadÅ‚e";
			case "parallelParking":
				return "Parkowanie rÃ³wnolegÅ‚e";
			case "diagonalParking":
				return "Parkowanie skoÅ›ne";
			case "startingUpTheHill":
				return "Ruszanie ze wzniesienia";
			case "stoppingAtDestination":
				return "Zatrzymanie w wyznaczonym miejscu";
			case "turningAroundOnIntersection":
				return "ZawrÃ³t na skrzyÅ¼owaniu";
			case "turningAroundUsingInfrastructure":
				return "ZawrÃ³t z uÅ¼yciem infrastruktury";
			default:
				return skill;
		}
	}
}
